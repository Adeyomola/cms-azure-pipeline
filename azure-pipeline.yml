variables:
  AWS_ACCESS_KEY_ID: $(access_key_id)
  AWS_SECRET_ACCESS_KEY: $(secret_access_key)
  AWS_DEFAULT_REGION: $(REGION)
  ANSIBLE_VAULT_PASSWORD_FILE:
  TF_VAR_db_user: $(USERNAME)
  TF_VAR_db_password: $(USERNAME)
  TF_VAR_db_name: $(DB_NAME)
  TF_VAR_db_port: 3306
  TF_VAR_arn: $(ARN)
  TF_VAR_email: $(email)
  TF_VAR_account_id: $(account_id)
  dockerhubPassword: $(docker_password)
  dockerhubUser: $(docker_username)
jobs:
  - job: Create_Backend
    steps:
      - script: |
          terraform init
          terraform apply -auto-approve
        workingDirectory: backend
  - job: Static_Application_Security_Testing_SonarQube
    steps:
      - script: |
          def scannerHome = tool 'sonarscanner'
          sh "${scannerHome}/bin/sonar-scanner"
        workingDirectory: docker
  - job: Docker_Image_Build
    steps:
      - script: docker build . -t wp
        workingDirectory: docker
  - job: Docker_Image_Push
    steps:
      - script: |
          echo $(dockerhubPassword) | docker login -u $(dockerhubUser) --password-stdin
          docker tag wp adeyomola/wordpress
          docker push adeyomola/wordpress
          docker logout
        workingDirectory: docker
  - job: Create_AKS_Cluster
    steps:
      - script: |
          terraform init
          terraform apply -auto-approve
        workingDirectory: provision
  - job: Install_LetsEncrypt_SSL_Certificate
    steps:
      - script: |
          terraform init
          terraform apply -auto-approve
        workingDirectory: ssl
  - job: Convert_Template_Files
    steps:
      - script: |
          terraform init
          terraform apply -auto-approve
        workingDirectory: ansible
  - job: Deploy_Ingress_Controller
    steps:
      - script: |
          terraform init
          terraform apply -auto-approve
        workingDirectory: lb
  - job: Deploy_Prometheus_and_Grafana_for_Monitoring
    steps:
      - script: |
          terraform init
          terraform apply -auto-approve
        workingDirectory: monitoring
  - job: Deploy_ELK_Stack_for_Logging
    steps:
      - script: |
          terraform init
          terraform apply -auto-approve
        workingDirectory: logging
  - job: Scanning_Image
    steps:
      - script: |
          trivy image adeyomola/wordpress

  #         trivy --exit-code 1 --no-progress --severity CRITICAL adeyomola/wordpress
  - job: Deploy_App
    steps:
      - script: |
          terraform init
          terraform apply -auto-approve
        workingDirectory: deploy
