variables:
  - group: cms
  - name: TF_VAR_db_port
    value: 3306
  - name: ANSIBLE_VAULT_PASSWORD_FILE
    value: /home/vsts/work/_temp/.pass.txt
jobs:
  # - job: Create_Backend
  #   steps:
  #     - script: |
  #         terraform init
  #         terraform apply -auto-approve
  #       workingDirectory: backend
  # - job: Static_Application_Security_Testing_SonarQube
  #   steps:
  #     - script: |
  #         def scannerHome = tool 'sonarscanner'
  #         sh "${scannerHome}/bin/sonar-scanner"
  #       workingDirectory: docker
  - job: Deploy_CMS
    steps:
      # Build Docker Image From Dockerfile
      - bash: docker build . -t wp
        workingDirectory: docker
        displayName: Docker Build
        # Push Image to DockerHub
      - task: Bash@3
        inputs:
          targetType: inline
          script: |
            echo "$dockerhubPassword" | docker login --username $dockerhubUser --password-stdin
            docker tag wp adeyomola/wordpress
            docker push adeyomola/wordpress
            docker logout
          workingDirectory: docker
        env:
          dockerhubPassword: $(docker_password)
          dockerhubUser: $(docker_username)
        displayName: Docker Push
        # Create EKS Cluster
      - task: Bash@3
        inputs:
          targetType: inline
          script: |
            terraform init
            terraform apply -auto-approve
          workingDirectory: provision
        env:
          AWS_ACCESS_KEY_ID: $(access_key_id)
          AWS_SECRET_ACCESS_KEY: $(secret_access_key)
          AWS_DEFAULT_REGION: $(REGION)
        displayName: Create EKS
        # Create SSL Certificate
      - task: Bash@3
        inputs:
          targetType: inline
          script: |
            terraform init
            terraform apply -auto-approve
          workingDirectory: ssl
        env:
          AWS_ACCESS_KEY_ID: $(access_key_id)
          AWS_SECRET_ACCESS_KEY: $(secret_access_key)
          AWS_DEFAULT_REGION: $(REGION)
          TF_VAR_email: $(email)
        displayName: Create SSL Certificate
      # Download Ansible Vault Password File
      - task: DownloadSecureFile@1
        name: ansiblePass
        displayName: "Download Ansible Vault Password File and Convert Template Files"
        inputs:
          secureFile: ".pass.txt"
          script: |
            terraform init
            terraform apply -auto-approve
          workingDirectory: ansible
      # Deploy Ingress Controller
      - task: Bash@3
        inputs:
          targetType: inline
          script: |
            terraform init
            terraform apply -auto-approve
          workingDirectory: alb
        env:
          AWS_ACCESS_KEY_ID: $(access_key_id)
          AWS_SECRET_ACCESS_KEY: $(secret_access_key)
          AWS_DEFAULT_REGION: $(REGION)
          TF_VAR_account_id: $(account_id)
        displayName: Deploy Ingress Controller
      # Deploy Monitoring
      - task: Bash@3
        inputs:
          targetType: inline
          script: |
            terraform init
            terraform apply -auto-approve
          workingDirectory: monitoring
        env:
          AWS_ACCESS_KEY_ID: $(access_key_id)
          AWS_SECRET_ACCESS_KEY: $(secret_access_key)
          AWS_DEFAULT_REGION: $(REGION)
        displayName: Deploy Prometheus and Grafana for Monitoring
      # Deploy Logging
      - task: Bash@3
        inputs:
          targetType: inline
          script: |
            terraform init
            terraform apply -auto-approve
          workingDirectory: logging
        env:
          AWS_ACCESS_KEY_ID: $(access_key_id)
          AWS_SECRET_ACCESS_KEY: $(secret_access_key)
          AWS_DEFAULT_REGION: $(REGION)
        displayName: Deploy Elastic Stack for Logging
      - bash: |
          trivy image adeyomola/wordpress
        #  trivy --exit-code 1 --no-progress --severity CRITICAL adeyomola/wordpress
        displayName: Scanning Image
      # Deploy App
      - task: Bash@3
        inputs:
          targetType: inline
          script: |
            terraform init
            terraform apply -auto-approve
          workingDirectory: deploy
        env:
          AWS_ACCESS_KEY_ID: $(access_key_id)
          AWS_SECRET_ACCESS_KEY: $(secret_access_key)
          AWS_DEFAULT_REGION: $(REGION)
          TF_VAR_db_user: $(USERNAME)
          TF_VAR_db_password: $(USERNAME)
          TF_VAR_db_name: $(DB_NAME)
        displayName: Deploy App
