variables:
  - group: cms
jobs:
  # - job: Create_Backend
  #   steps:
  #     - script: |
  #         terraform init
  #         terraform apply -auto-approve
  #       workingDirectory: backend
  - job: Deploy_CMS
    steps:
      # Prepare Analysis Configuration task
      - task: SonarQubePrepare@5
        inputs:
          SonarQube: "sonarqube"
          scannerMode: "CLI"
          configMode: "file"
      # Remove sonar.branch.name
      - powershell: |
          $params = "$env:SONARQUBE_SCANNER_PARAMS" -replace '"sonar.branch.name":"[\w,/,-]*"\,?'
          Write-Host "##vso[task.setvariable variable=SONARQUBE_SCANNER_PARAMS]$params"
      # Build Docker Image From Dockerfile
      - bash: docker build . -t wp
        displayName: Docker Build
        workingDirectory: docker
      # Run Code Analysis task
      - task: SonarQubeAnalyze@5
      # Publish Quality Gate Result task
      - task: SonarQubePublish@5
        inputs:
          pollingTimeoutSec: "300"
      # Push Image to DockerHub
      - task: Bash@3
        displayName: Docker Push
        inputs:
          targetType: inline
          script: |
            echo "$dockerhubPassword" | docker login --username $dockerhubUser --password-stdin
            docker tag wp adeyomola/wordpress
            docker push adeyomola/wordpress
            docker logout
          workingDirectory: docker
        env:
          dockerhubPassword: $(docker_password)
          dockerhubUser: $(docker_username)
        # Create EKS Cluster
      - task: Bash@3
        displayName: Create EKS
        retryCountOnTaskFailure: 1
        inputs:
          targetType: inline
          script: |
            terraform init
            terraform apply -auto-approve
          workingDirectory: provision
        env:
          AWS_ACCESS_KEY_ID: $(access_key_id)
          AWS_SECRET_ACCESS_KEY: $(secret_access_key)
          AWS_DEFAULT_REGION: $(REGION)
        # Create SSL Certificate
      - task: Bash@3
        displayName: Create SSL Certificate
        inputs:
          targetType: inline
          script: |
            terraform init
            terraform apply -auto-approve
          workingDirectory: ssl
        env:
          AWS_ACCESS_KEY_ID: $(access_key_id)
          AWS_SECRET_ACCESS_KEY: $(secret_access_key)
          AWS_DEFAULT_REGION: $(REGION)
          TF_VAR_email: $(email)
      # Download Ansible Vault Password File
      - task: DownloadSecureFile@1
        name: ansiblePass
        displayName: "Download Ansible Vault Password File"
        inputs:
          secureFile: ".pass.txt"
      # Convert Template Files
      - bash: |
          export ANSIBLE_VAULT_PASSWORD_FILE=$(ansiblePass.secureFilePath)
          terraform init
          terraform apply -auto-approve
        displayName: Convert Template Files
        workingDirectory: ansible
      # Deploy Ingress Controller
      - task: Bash@3
        displayName: Deploy Ingress Controller
        inputs:
          targetType: inline
          script: |
            terraform init
            terraform apply -auto-approve
          workingDirectory: alb
        env:
          AWS_ACCESS_KEY_ID: $(access_key_id)
          AWS_SECRET_ACCESS_KEY: $(secret_access_key)
          AWS_DEFAULT_REGION: $(REGION)
          TF_VAR_account_id: $(account_id)
      # Deploy Monitoring
      - task: Bash@3
        displayName: Deploy Prometheus and Grafana for Monitoring
        inputs:
          targetType: inline
          script: |
            terraform init
            terraform apply -auto-approve
          workingDirectory: monitoring
        env:
          AWS_ACCESS_KEY_ID: $(access_key_id)
          AWS_SECRET_ACCESS_KEY: $(secret_access_key)
          AWS_DEFAULT_REGION: $(REGION)
      # Deploy Logging
      - task: Bash@3
        displayName: Deploy Elastic Stack for Logging
        inputs:
          targetType: inline
          script: |
            terraform init
            terraform apply -auto-approve
          workingDirectory: logging
        env:
          AWS_ACCESS_KEY_ID: $(access_key_id)
          AWS_SECRET_ACCESS_KEY: $(secret_access_key)
          AWS_DEFAULT_REGION: $(REGION)
        # Scanning Image
      - task: trivy@1
        displayName: Scanning Image
        inputs:
          image: adeyomola/wordpress
          severities: CRITICAL
          exitCode: 0
      # Deploy App
      - task: Bash@3
        displayName: Deploy App
        inputs:
          targetType: inline
          script: |
            terraform init
            terraform apply -auto-approve
          workingDirectory: deploy
        env:
          AWS_ACCESS_KEY_ID: $(access_key_id)
          AWS_SECRET_ACCESS_KEY: $(secret_access_key)
          AWS_DEFAULT_REGION: $(REGION)
          TF_VAR_db_user: $(USERNAME)
          TF_VAR_db_password: $(PASSWORD)
          TF_VAR_db_name: $(DB_NAME)
          TF_VAR_db_port: 3306
